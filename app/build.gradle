apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "anetos.software.byjuszyoin"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
        //archivesBaseName = versionName
        //setProperty("archivesBaseName", "yourapp-packagename-$versionName")
    }


    buildTypes {
        debug {
            minifyEnabled false
            multiDexEnabled true
            //signingConfig signingConfigs.alpha
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def formattedDate = new Date().format('HH:mm')
                    def flavor = variant.name
                    def versionName = variant.versionName
                    outputFileName = "${rootProject.getName()}_${formattedDate}-${flavor}-v${versionName}.apk"
                }
            }
        }
        release {
            minifyEnabled false
            debuggable false
            multiDexEnabled true
            //signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        mock {
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.13.2'
    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.3.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.3.0'

    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Retrofit
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.google.code.gson:gson:2.8.6'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-common:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'

    // Kotlin Co-routines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    //room Database
    implementation 'androidx.room:room-runtime:2.3.0'
    // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:2.3.0"
    kapt 'android.arch.persistence.room:compiler:1.1.1'
    androidTestImplementation "androidx.room:room-testing:2.3.0"    // Test helpers
    // Kotlin Extensions and Coroutines support for Roo
    //implementation 'androidx.room:room-ktx:2.2.5'

    //add paging library
    //implementation 'android.arch.paging:runtime:1.0.1'
    implementation 'androidx.paging:paging-runtime:3.0.0' // For Kotlin use paging-runtime-ktx
    // alternatively - without Android dependencies for testing
    testImplementation 'androidx.paging:paging-common:3.0.0' // For Kotlin use paging-common-ktx
    // optional - RxJava support
    implementation 'androidx.paging:paging-rxjava2:3.0.0' // For Kotlin use paging-rxjava2-ktx

    //image loading and caching library
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    // For Kotlin use kapt instead of annotationProcessor

    implementation 'com.squareup.picasso:picasso:2.71828'

    //Others
    implementation 'androidx.multidex:multidex:2.0.1'

}